buildscript {
    repositories {
        dependencies{
            classpath "com.commercehub.gradle.plugin:gradle-avro-plugin:0.16.0"
        }
    }
}

plugins {
    id 'org.springframework.boot' version '2.6.+'
    id "com.commercehub.gradle.plugin.avro" version "0.9.1"
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    maven {
        url "https://packages.confluent.io/maven/"
    }
    mavenCentral()
}



apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
//apply plugin: 'avro-gradle-plugin'
apply plugin: "com.commercehub.gradle.plugin.avro"

//java {
//    sourceCompatibility=JavaVersion.VERSION_17
//    targetCompatibility=JavaVersion.VERSION_17
//}

dependencies {
   // compile group: 'org.apache.avro', name: 'avro', version: '1.9.1'
   // classpath 'org.apache.avro.gradle:avro-gradle-plugin:1.7.1'
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation("org.springframework.boot:spring-boot-starter")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-devtools")
    implementation("org.springframework.boot:spring-boot-starter-actuator")

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.h2database:h2'

    compileOnly('org.projectlombok:lombok:1.18.28')

    //kafka libraries
    implementation('org.springframework.kafka:spring-kafka')
    implementation('org.apache.kafka:kafka-clients')
    implementation('org.apache.avro:avro:1.+')
    //implementation('org.jsmart:zerocode-tdd:1.3.23')
    implementation 'io.confluent:kafka-avro-serializer:6.+'
}

//tasks.register('generateavro',com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask)
//        {
//            source("src/main/avro")
//            include("**/*.avsc")
//            outputDir=file("src/main/java")
//            outputs.upToDateWhen {false}
//        }
//
//compileJava.source(generateavro.outputs)

//task excludeOutputFile {
//    doLast {
//
//    }
//}
//
//build.dependsOn(excludeOutputFile)

tasks.clean {
    delete rootProject.buildFile
}
//sourceSets {
//    main {
//        java {
//            //srcDirs = ['src/main']
//            exclude 'src/main/*'
//        }
//    }
//}

test {
    useJUnitPlatform()
}